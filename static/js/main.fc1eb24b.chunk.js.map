{"version":3,"sources":["Components/Form.js","Components/weather-card.js","Components/principal.js","Components/extendedWeatherCard.js","Components/extendedWeather.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","onSubmit","this","props","getData","name","type","placeholder","value","React","Component","WeatherCard","error","temperature","city","countryCode","src","icon","alt","description","Principal","state","loanding","extendedWeather","getWeather","e","a","preventDefault","target","elements","country","cityValue","countryValue","datos","setState","URL","kelvin","fetch","response","json","sys","main","temp","toFixed","weather","cod","message","handleExtend","localStorage","setItem","Fragment","to","onClick","ExtendedWeatherCard","data","date","hum","id","ExtendedWeather","useState","setData","setLoanding","getItem","listArray","traerClima","setListArray","list","i","push","customDate","dt_txt","humidity","useEffect","string","chars","split","hour","splice","map","item","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc1eb24b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './form.css'\r\n\r\nclass Form extends  React.Component{\r\n \r\n\r\n   render(){ \r\n  \r\n       return (\r\n         <div className=\"containerForm\">\r\n           <div className=\"cardForm\">\r\n             <h1 className=\"title animate__animated animate__fadeInDown\">Weather App</h1>\r\n             <form onSubmit={this.props.getData}>\r\n               <input className=\"input\" name=\"city\" type=\"text\" placeholder=\"city\" />\r\n               <input className=\"input\" name=\"country\" type=\"text\" placeholder=\"country\" />\r\n               <input\r\n                 className=\"button\"\r\n                 type=\"submit\"\r\n                 value=\"submit\"\r\n               />\r\n             </form>\r\n           </div>\r\n         </div>\r\n       );\r\n   }\r\n} \r\n\r\nexport default Form;","import React from 'react'\r\nimport './weather-card.css'\r\n\r\nclass WeatherCard extends React.Component {\r\n  render() { \r\n\r\n    return (\r\n      <div>\r\n        {(!this.props.error)&& this.props.temperature ? (\r\n          <div className=\"containerW\">\r\n            <div className=\"cardW\">\r\n              <h2 className=\"ciudad\">\r\n                {\" \"}\r\n                {this.props.city}{\" \"}\r\n                <sup className=\"country\"> {this.props.countryCode} </sup>\r\n              </h2>\r\n              <h1 className=\"temp\">\r\n                {this.props.temperature}\r\n                <sup className=\"celsius\"> CÂº</sup>\r\n              </h1>\r\n              <img className=\"img\" src={this.props.icon} alt=\"\" />\r\n              <p className=\"description\">{this.props.description}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"containerW\">\r\n            <div className=\"cardW\">\r\n              <img\r\n                className=\"imgDefault animate__animated animate__tada\"\r\n                src=\"https://cdn1.iconfinder.com/data/icons/weather-189/64/weather-icons-cloudy-512.png\"\r\n                alt=\"\"\r\n              />\r\n              <p className=\"description\"></p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nexport default WeatherCard;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Form from './Form'\r\nimport WeatherCard from './weather-card'\r\n\r\n\r\nclass Principal extends React.Component {\r\n  state = {\r\n    city: \"\",\r\n    countryCode: \"\",\r\n    temperature: \"\",\r\n    description: \"\",\r\n    icon: \"\",\r\n    error: \"\",\r\n    loanding: false,\r\n    extendedWeather: false\r\n  };\r\n\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n    const { city, country } = e.target.elements;\r\n    const cityValue = city.value;\r\n    const countryValue = country.value;\r\n    let datos = ''\r\n\r\n    if (cityValue && countryValue) {\r\n      this.setState({\r\n        loanding: true,\r\n        error: false,\r\n        extendedWeather: false\r\n      });\r\n      try {\r\n        const APIkey = \"337cb8efcec75a9a3df2a42bb251f8a9\";\r\n        const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&appid=${APIkey}`;\r\n        const kelvin = 273.15;\r\n        const response = await fetch(URL);\r\n        datos = await response.json();\r\n        this.setState({\r\n          city: cityValue,\r\n          countryCode: datos.sys.country,\r\n          temperature: (datos.main.temp - kelvin).toFixed(1),\r\n          description: datos.weather[0].description,\r\n          icon: `http://openweathermap.org/img/wn/${datos.weather[0].icon}@2x.png`,\r\n          error: \"\",\r\n          loanding: false,\r\n          extendedWeather: true\r\n        });\r\n      } catch (e) {\r\n        this.setState({\r\n          error: datos.cod + ' ' + datos.message, \r\n          loanding: false,\r\n          extendedWeather: false\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        error: \"Plese enter a city and a country\",\r\n        loanding: false,\r\n        extendedWeather: false\r\n      });\r\n    }\r\n  }; \r\n   \r\n  handleExtend =()=>{\r\n    const {city, countryCode} = this.state\r\n    localStorage.setItem('city', city)\r\n    localStorage.setItem('country', countryCode)  \r\n  }\r\n  \r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col md-6\">\r\n              <Form getData={this.getWeather} />\r\n              {this.state.error && (\r\n                <div className=\"userMessage alert alert-danger\">\r\n                  {this.state.error}\r\n                </div>\r\n              )}\r\n              {this.state.loanding && (\r\n                <h1 className=\"alert alert-info userMessage\">LOANDING...</h1>\r\n              )}\r\n            </div>\r\n            <div className=\"col md-6\">\r\n              <WeatherCard {...this.state} />\r\n              {\r\n                this.state.extendedWeather? (\r\n                  <Link to='/ExtendedWeather'\r\n                   className=\"extend\"\r\n                   onClick ={this.handleExtend}\r\n                   >extended weather</Link>\r\n                ):\r\n                (\r\n                  <div></div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n} \r\n\r\nexport default Principal ","import React from 'react' ;  \r\n\r\nconst ExtendedWeatherCard = (props) => {\r\n  const { temp, date, hum, description, icon } = props.data;\r\n  return (\r\n    <div>\r\n      <div className=\"containerWE\">\r\n        <div className=\"cardWE\">\r\n          <br/>\r\n          <h2 className=\"date\">{date}</h2>\r\n          <hr />\r\n          <h1 className=\"tempW\"> \r\n          {temp}\r\n            <sup id=\"celsius\">CÂº</sup>\r\n          </h1>\r\n          <h2 className=\"humidity\"> Hum: {hum} % </h2>\r\n          <img className=\"img\" src={icon} alt=\"\" />\r\n          <p className=\"description\">{description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport default ExtendedWeatherCard","import React,{ Fragment, useEffect, useState} from 'react' ;\r\nimport {Link} from 'react-router-dom'\r\nimport './extendedWeather.css'\r\nimport ExtendedWeatherCard from './extendedWeatherCard.js'\r\n\r\n\r\n const ExtendedWeather = () => {\r\n   const [data, setData] = useState([{}, {}, {}, {}, {}, {}, {}, {}, {}]);\r\n   const [loanding, setLoanding] = useState(true);\r\n   const city = localStorage.getItem(\"city\");\r\n   const country = localStorage.getItem(\"country\");\r\n   const kelvin = 273.15;\r\n   let listArray = [];\r\n\r\n   const traerClima = async () => {\r\n     const APIkey = \"337cb8efcec75a9a3df2a42bb251f8a9\";\r\n     const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${APIkey}`;\r\n     const response = await fetch(URL);\r\n     const datos = await response.json();\r\n     setListArray(datos.list);\r\n     setData(listArray);\r\n     setLoanding(false);\r\n   };\r\n\r\n   const setListArray = (list) => {\r\n     for (let i = 0; i < 9; i++) {\r\n       listArray.push({\r\n         temp: (list[i].main.temp - kelvin).toFixed(1),\r\n         date: customDate(list[i].dt_txt),\r\n         hum: list[i].main.humidity,\r\n         icon: `http://openweathermap.org/img/wn/${list[i].weather[0].icon}@2x.png`,\r\n         description: list[i].weather[0].description,\r\n       });\r\n     }\r\n   };\r\n\r\n   useEffect(() => {\r\n     traerClima();\r\n   }, []);\r\n\r\n   const customDate = (string) => {\r\n     const chars = string.split(\" \");\r\n     const hour = chars[1].split(\":\").splice(0, 1);\r\n     const date = chars[0].split(\"-\").splice(1, 2);\r\n     const newDate = date[0] + \"/\" + date[1] + \"  \" + hour + \":00\";\r\n     return newDate;\r\n   };\r\n\r\n   return (\r\n     <Fragment>\r\n       <h1 className=\"ttle animate__animated animate__bounce\">\r\n         {city}, {country}{\" \"}\r\n         <Link to=\"/\" className=\"btn btn-warning back\">\r\n           Back\r\n         </Link>\r\n       </h1>\r\n       <hr />\r\n       <div className=\"container\">\r\n         <div className=\"row\">\r\n           {loanding ? (\r\n             <Fragment>\r\n               <div className=\"col md-3\"></div>\r\n               <h1 className=\"alert alert-info col md-3 centrado\">\r\n                 LOANDING...\r\n               </h1>\r\n               <div className=\"col md-3\"></div>\r\n               <div className=\"col md-3\"></div>\r\n             </Fragment>\r\n           ) : (\r\n             data.map((item, i) => (\r\n               <div className=\"col-md-4\" key={i}>\r\n                 <ExtendedWeatherCard data={data[i]} />\r\n               </div>\r\n             ))\r\n           )}\r\n         </div>\r\n       </div>\r\n     </Fragment>\r\n   );\r\n };\r\n\r\n export default ExtendedWeather;  \r\n","import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Principal from './Components/principal';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport ExtendedWeather from './Components/extendedWeather';\n\nfunction App() { \n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Principal/>\n        </Route>\n        <Route path=\"/ExtendedWeather\">\n           <ExtendedWeather/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}